#!/bin/bash

# notes:
# use backslash before commonly aliased commands

set -e

case "$1" in

# Attach to a running container, turn signal proxy off by default
attach)
    docker attach --sig-proxy=false $2
    ;;

# Build a tagged container image based on a *path*
# TODO: pass options
b)
    namespace=${DOCKER_NAMESPACE:-$USER}
    dockerfile_location=${2:-"."}
    name=$(cd $dockerfile_location && echo ${PWD##*/})
    # TODO let you build an image without a namespace
    docker build -t "$namespace/$name" $dockerfile_location
    ;;


# Log into a image and throw away the container
bash)
    length=$(($#))
    params=${@:2:$length}
    docker run --rm -i -t $params /bin/bash
    ;;

# Delete all untagged containers
clean)
    docker rm $(docker ps -a | tail -n+2 | awk '{print $1"\t"$2'} | \grep -v ':' | cut -f1)
    ;;

# Delete all untagged images
#
# based on https://github.com/dotcloud/docker/issues/928#issuecomment-36481177
cleani)
    docker rmi $(docker images | awk '/^<none>/ { print $3 }')
    ;;

# List images, filtering out untagged images
images)
    docker images | \grep -v ^\<
    ;;

# Get the IP address of a running container
ip)
    docker inspect --format '{{.NetworkSettings.IPAddress}}' $2
    ;;

# Get just the port number for a NAT-ed port
prt)
    docker port ${@:2:$#} | cut -d : -f 2
    ;;

# Delete the latest container
oops)
    # http://stackoverflow.com/questions/3231804/in-bash-how-to-add-are-you-sure-y-n-to-any-command-or-alias
    docker ps -l
    read -r -p "Are you sure? [y/N] " response
    response=${response,,}    # tolower
    if [[ $response =~ ^(yes|y)$ ]]; then
        docker rm -f $(docker ps -l -q)
    else
        echo 'Nevermind then'
    fi
    ;;

# Stop and remove a running container
# I may just wrap `rm` and stop running containers
smite)
    echo "Stopping and then removing $2"
    docker stop $2
    docker rm $2
    ;;

# Stop all running containers
stopall)
    docker stop $(docker ps -q)
    ;;

# Anything else you try gets passed directly to `docker`
*)
    docker $@
    ;;

esac

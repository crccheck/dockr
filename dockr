#!/bin/bash

# notes:
# use backslash before commonly aliased commands

set -e

case "$1" in

# Build a tagged container image based on a *path*
# TODO: pass options
b)
    dockerfile_location=${2:-"."}
    name=$(cd $dockerfile_location && echo ${PWD##*/})
    docker build -t "$USER/$name" $dockerfile_location
    ;;


# Log into a container/image
bash)
    docker run -i -t ${@:2} /bin/bash
    ;;

# Delete all untagged containers
clean)
    docker rm $(docker ps -a | awk '{print $1"\t"$2'} | \grep -v ':' | cut -f1)
    ;;

# Delete all untagged images
#
# based on https://github.com/dotcloud/docker/issues/928#issuecomment-36481177
cleani)
    docker rmi $(docker images | awk '/^<none>/ { print $3 }')
    ;;

# List images, filtering out untagged images
images)
    docker images | \grep -v ^\<
    ;;

# Get the IP address of a running container
ip)
    docker inspect $2 | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[0]["NetworkSettings"]["IPAddress"]'
    ;;

# Stop and remove a running container
# I may just wrap `rm` and stop running containers
smite)
    docker stop $2
    docker rm $2
    ;;

# Stop all running containers
stopall)
    docker stop $(docker ps -q)
    ;;

# Anything else you try gets passed directly to `docker`
*)
    docker $@
    ;;

esac
